{{- if not .Values.docker.registryUrl }}

#############################################################
####   ERROR: You did not provide Private Registry RUL   ####
#############################################################

All pods do not go to the running state if the instances
settings were not provided.

{{- end }}

1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "kubenab.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "app.kubernetes.io/name={{ include "kubenab.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward $POD_NAME 8080:80
{{- end }}

{{/*
Print Config that needs to be added to the ConfigMap of the prometheus-adapter
if Prometheus Metrics are enabled.
*/}}
{{- if .Values.metrics.enable }}
Please add the following Data to the prometheus-adapter ConfigMap.
If you don't do this the HPA will not work!

{{/* ~~~~~ Response Latency Metric ~~~~~ */}}
{{- if .Values.hpa.metrics.latency }}
    - seriesQuery: '{namespace!="",pod!=""}'
      name:
        matches: "^(.*)_milliseconds_bucket"
        as: "http_request_duration"
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
      metricsQuery: 'histogram_quantile(0.99, sum(rate(<<.Series>>[5m])) by (le, api_method, endpoint, <<.GroupBy>>))'
{{- end }}

{{/* ~~~~~ HTTP Requests Metric ~~~~~ */}}
{{- if .Values.hpa.metrics.httpRequests }}
    - seriesQuery: 'http_requests_total{namespace!="",pod!=""}'
      resources:
        overrides:
          namespace: {resource: "namespace"}
          pod: {resource: "pod"}
      name:
        matches: "^(.*)_total"
        as: "${1}_per_second"
      metricsQuery: 'sum(rate(<<.Series>>{<<.LabelMatchers>>}[2m])) by (<<.GroupBy>>)'
{{- end }}
{{- end }}
